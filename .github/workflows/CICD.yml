name: CICD
on:
  pull_request:
    branches: [main, dev]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3 # workflow에서 액세스할 수 있도록 저장소를 체크아웃 // nonde v16

      - name: Generate .env for production
        run: |
          echo "REACT_APP_SERVER=$REACT_APP_SERVER" >> .env.production
           echo "REACT_APP_AK=$REACT_APP_AK" >> .env.production
           echo "REACT_APP_BK=$REACT_APP_BK" >> .env.production
           echo "REACT_APP_SK=$REACT_APP_SK" >> .env.production
           echo "REACT_APP_KakaoKey=$REACT_APP_KakaoKey" >> .env.production
           echo "REACT_APP_KaKaoREDIRECT=$REACT_APP_KaKaoREDIRECT" >> .env.production
           echo "REACT_APP_KaKaoJSKey=$REACT_APP_KaKaoJSKey" >> .env.production
           echo "REACT_APP_SOCKET_SERVER=$REACT_APP_SOCKET_SERVER" >> .env.production
           echo "REACT_APP_SEARCH_URL=$REACT_APP_SEARCH_URL" >> .env.production
           echo "REACT_APP_SEARCH_KEY=$REACT_APP_SEARCH_KEY" >> .env.production
        env:
          REACT_APP_SERVER: ${{ secrets.REACT_APP_SERVER }}
          REACT_APP_AK: ${{ secrets.REACT_APP_AK }}
          REACT_APP_BK: ${{ secrets.REACT_APP_BK }}
          REACT_APP_SK: ${{ secrets.REACT_APP_SK }}
          REACT_APP_KakaoKey: ${{ secrets.REACT_APP_KakaoKey }}
          REACT_APP_KaKaoREDIRECT: ${{ secrets.REACT_APP_KaKaoREDIRECT_PROD }}
          REACT_APP_KaKaoJSKey: ${{ secrets.REACT_APP_KaKaoJSKey }}
          REACT_APP_SOCKET_SERVER: ${{ secrets.REACT_APP_SOCKET_SERVER }}
          REACT_APP_SEARCH_URL: ${{ secrets.REACT_APP_SEARCH_URL }}
          REACT_APP_SEARCH_KEY: ${{ secrets.REACT_APP_SEARCH_KEY }}

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build:prod

      - name: S3 Deploy
        run: aws s3 sync ./build s3://oncounter.co.kr/ --acl bucket-owner-full-control # 현재 build된 폴더에 접근 후 s3 버킷인 oncounter에 파일 업로드
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CI_CD_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CI_CD_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - name: Invalidate CloudFront Cache # 새로 리소스를 업데이트할 때 기존 캐시 무효화
        uses: chetan/invalidate-cloudfront-action@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CI_CD_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CI_CD_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DISTRIBUTION: ${{ secrets.AWS_DISTRIBUTION_MAIN_ID }}
          PATHS: "/index.html"
        continue-on-error: true
